@page "/massage"
@page "/massage/{Url}"
@inject IJSRuntime JSRuntime
@inject MassageService MassageService


<nav aria-label="breadcrumb">
    <ol class="breadcrumb breadcrumb-no-gutter m-lg-4 p-3">
        <li class="breadcrumb-item"><a href="/massage-all">Massage</a></li>
        <li class="breadcrumb-item active" aria-current="page">@model.Title</li>
    </ol>
</nav>
<div class="container space-bottom-2">
    <div class="w-lg-60 mx-lg-auto">
        <div class="card shadow-sm p-3">
            <h1 class="h2 font-weight-medium text-center">@model.Title</h1>
            <div class="container space-top-0 space-bottom-md-1 space-bottom-0">
                <div class="row">
                    <div class="col-12 text-center">
                        <a class="btn btn-outline-success mb-3 mr-1" href="#carouselExampleIndicators2" role="button" data-slide="prev">
                            <i class="fa fa-arrow-left"></i>
                        </a>
                        <a class="btn btn-outline-success mb-3 " href="#carouselExampleIndicators2" role="button" data-slide="next">
                            <i class="fa fa-arrow-right"></i>
                        </a>
                    </div>
                    <div class="col-12">
                        <div id="carouselExampleIndicators2" class="carousel slide text-center" data-ride="carousel">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <div class="row justify-content-center">
                                        @foreach (var im in model.MassageImages.Take(1))
                                        {
                                            <img src="data:image/jpg;base64, @im.Nmae" class="img-thumbnail text-right" style="height:420px;width:640px;" alt="" />
                                        }
                                    </div>
                                </div>
                                <div class="carousel-item">
                                    <div class="row justify-content-center">
                                        @foreach (var im in model.MassageImages.Skip(1).Take(1))
                                        {
                                            <img src="data:image/jpg;base64, @im.Nmae" class="img-thumbnail text-right" style="height:420px;width:640px;" alt="" />
                                        }
                                    </div>
                                </div>
                                <div class="carousel-item">
                                    <div class="row justify-content-center">
                                        @foreach (var im in model.MassageImages.Skip(2).Take(1))
                                        {
                                            <img src="data:image/jpg;base64, @im.Nmae" class="img-thumbnail text-right" style="height:420px;width:640px;" alt="" />
                                        }
                                    </div>
                                </div>
                                @if (model.MassageImages.Count() < 4 != true)
                                {
                                    <div class="carousel-item">
                                        <div class="row justify-content-center">
                                            @foreach (var im in model.MassageImages.Skip(3).Take(1))
                                            {
                                                <img src="data:image/jpg;base64, @im.Nmae" class="img-thumbnail text-right" style="height:420px;width:640px;" alt="" />
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>         
            <br />
            <p>@model.LongDescription</p>

        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Url { get; set; }

    protected MassageAllModel model = new MassageAllModel();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Url))
        {
            model = await MassageService.GetByUrl(Url);
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("loadScripts");
            await JSRuntime.InvokeVoidAsync("setTitle", "Beauty Salon - View Massage");
        }
    }
}
